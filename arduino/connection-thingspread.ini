#include <ESPmDNS.h>

#include "WiFi.h"
#include "HTTPClient.h"
#include "Adafruit_Sensor.h"
#include "DHT.h"

// --- WiFi Credentials ---
const char* ssid = "your_ssid";
const char* password = "your_password";

// --- ThingSpeak Configuration ---
String apiKey = "api_key";
const char* server = "api.thingspeak.com";

// --- DHT Sensor (Air Temp & Humidity) ---
#define DHTPIN 4
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

// --- Soil Moisture Sensor ---
const int SOIL_SENSOR_PIN = 34;

// --- Data Variables ---
float soilMoisture = 0;
float temperature = 0;
float airHumidity = 0;

void setup() {
  Serial.begin(115200);
  delay(10);
  dht.begin();

  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected!");
  Serial.println("IP Address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  // Read sensors
  temperature = dht.readTemperature();
  airHumidity = dht.readHumidity();
  int analogValue = analogRead(SOIL_SENSOR_PIN);
  soilMoisture = map(analogValue, 4095, 0, 0, 100);

  if (isnan(temperature) || isnan(soilMoisture) || isnan(airHumidity)) {
    Serial.println("Error reading sensors.");
    return;
  }

  Serial.print("Soil Moisture: ");
  Serial.print(soilMoisture);
  Serial.println(" %");

  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println(" *C");

  Serial.print("Air Humidity: ");
  Serial.print(airHumidity);
  Serial.println(" %");

  // Send data to ThingSpeak
  if (WiFi.status() == WL_CONNECTED) {
    WiFiClient client;
    HTTPClient http;

    String serverPath = "http://api.thingspeak.com/update?api_key=" + apiKey +
                        "&field1=" + String(soilMoisture) +
                        "&field2=" + String(temperature) +
                        "&field3=" + String(airHumidity);

    http.begin(client, serverPath.c_str());

    int httpResponseCode = http.GET();

    if (httpResponseCode > 0) {
      Serial.print("HTTP Response Code: ");
      Serial.println(httpResponseCode);
    } else {
      Serial.print("HTTP Request Failed, Error: ");
      Serial.println(httpResponseCode);
    }

    http.end();
  } else {
    Serial.println("WiFi connection error.");
  }

  delay(20000);
}
